<?php
use Drupal\Core\Link;
use Symfony\Component\HttpFoundation\Request;
use Drupal\views\Views;
function suffix_zx_hook_info() {
    $hooks = [];

    $hooks += array_fill_keys([
        //'suffix_zx_preprocess_page_cart_confirm',
        'suffix_zx_preprocess_cart_views_view',
        'suffix_zx_preprocess_cart_views_view_list',
        'suffix_zx_preprocess_views_view',
        'suffix_zx_theme_suggestions_views_view_alter',
    ], ['group' => 'cart']);
    return $hooks;
}

function suffix_zx_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
    //dump($variables);
    $view = $variables['view'];
    if (strpos($view->storage->get('tag'), 'commerce_cart_form') === FALSE) {
        return ;
    }
    $suggestions[] = 'cart_views_view';

}

function suffix_zx_theme_suggestions_form_alter(array &$suggestions, array $variables) {
    $args = func_get_args();
    //dump($args);exit;

    $form_id = $variables['element']['#form_id'];
    if (strpos($form_id, 'profile_customer_edit_form') === FALSE) {
        return ;
    }
    $suggestions[] = 'page__profile__edit_form';

}

/**
* Implements hook_form_FORM_ID_alter().
*/
function suffix_zx_form_user_login_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    if ('user.login' !== \Drupal::routeMatch()->getRouteName()) {
        return;
    }
    $link = Link::createFromRoute(t('注册新用户请点击此处'), 'user.register');
    $link->getUrl()->setOption('attributes', ['class' => ['member-cut']]);
    // Wrap the form.
    $form['#prefix'] = '<div class="profile-9vcMlb wrapper"><div class="member-container"><div class="login-box">';
    $form['#suffix'] = '<p class="Agsu">点击”登录”按钮，即表示您同意用户服务协议</p>'.$link->toString().
            '</div></div></div>';
    //$form['#attached']['library'][] = 'suffix_zx/suffpage-login';
    $form['name'] = [
        '#type' => 'textfield',
        '#size' => 60,
        '#maxlength' => USERNAME_MAX_LENGTH,
        '#required' => TRUE,
        '#attributes' => [
            'autocorrect' => 'none',
            'autocapitalize' => 'none',
            'spellcheck' => 'false',
            'autofocus' => 'autofocus',
            'placeholder' =>'请使用手机号码或帐号',
        ],
        '#prefix'=>'<div class="line-item">',
        '#suffix'=>'</div>',
    ];
    $form['pass'] = [
        '#type' => 'password',
        '#size' => 60,
        '#required' => TRUE,
        '#attributes' => [
            'placeholder' => '请输入帐号密码或手机验证码'
        ],
        '#prefix'=>'<div class="line-item">',
        '#suffix'=>'<a href="javascript:;" class="get-code">获取验证码</a></div>',
    ];

    $form['actions'] = ['#type' => 'actions'];
    $form['actions']['submit'] = [
        '#type' => 'submit',
        '#value' => '登录',
        '#attributes' => [
            'class' => ['member-btn'],
        ]
    ];
}

function suffix_zx_preprocess_commerce_product(&$variables) {
    //dump($variables['elements']['field_fengmiantu']);exit;
    $variables['title'] = render($variables['elements']['title']);
    $variables['fengmiantu'] = render($variables['elements']['field_fengmiantu']);
    $variables['price'] = render($variables['elements']['field_fengmianjiage']);
    $variables['body'] = render($variables['elements']['body']);
    $variables['add_to_cart'] = render($variables['elements']['variations']);
    $variables['zheqian'] = sprintf("%.2f",ceil($variables['product_entity']->toArray()['field_fengmianjiage'][0]['number']/0.78));
}

function suffix_zx_preprocess_page(&$variables) {
    $request = Request::createFromGlobals();
    $variables['currentUrl'] =$request->getPathInfo();
    $variables['selected_flag'] = 'front';
    if(strpos($variables['currentUrl'],'orders')) {
        $variables['selected_flag'] = 'orders';
    } elseif (strpos($variables['currentUrl'],'cart')) {
        $variables['selected_flag'] = 'cart';
    } elseif (strpos($variables['currentUrl'],'discover')) {
        $variables['selected_flag'] = 'discover';
    } elseif (1 === strpos($variables['currentUrl'],'user') || false !== strpos($variables['currentUrl'],'profile')) {
        $variables['selected_flag'] = 'home';
    } else {
        $variables['selected_flag'] = 'front';
    }
    //dump($variables);
    //dump($variables['user']->getAccount());
}


function suffix_zx_theme($existing, $type, $theme, $path) {
    return [
        'profile_customer_add_form' => [//用户地址新增页
            'template' => 'profile-customer-add-form',
            'render element' => 'elements',
            "path" => "themes/suffix_zx/templates/user",
            "preprocess functions" => ["suffix_zx_preprocess_profile_customer_add_form"],
        ],
        'profile_customer_edit_form' => [//用户地址编辑页
            'template' => 'profile-customer-edit-form',
            'render element' => 'elements',
            "path" => "themes/suffix_zx/templates/user",
            "preprocess functions" => ["suffix_zx_preprocess_profile_customer_edit_form"],
        ],
        'field_multiple_value_form_customer' => [
            'template' => 'field-multiple-value-form-customer',
            "path" => "themes/suffix_zx/templates/user",
            "preprocess functions" => ["suffix_zx_preprocess_field_multiple_value_form_customer"],
        ],
        'commerce_checkout_form__sidebar' => [
            //'base hook' => 'commerce_checkout_form__sidebar',
            'template' => 'commerce-checkout-form--sidebar',
            "path" => "themes/suffix_zx/templates/checkout",
            "preprocess functions" => ["suffix_zx_preprocess_commerce_checkout_form__sidebar"],
        ],
        'cart-confirm-views-view' => [
            'base hook' => 'cart_confirm_views_view',
            'template' => 'cart-confirm-views-view',
            "path" => "themes/suffix_zx/templates/cart",
            'variables' => [
                'cart-item' => NULL,
            ],
            "preprocess functions" => ["suffix_zx_preprocess_cart_confirm_views_view"],
        ],
        'cart_views_view' => [
            'base hook' => 'cart_views_view',
            "path" => "themes/suffix_zx/templates/views",
            "preprocess functions" => ["suffix_zx_preprocess_cart_views_view"],
        ],
        'cart_views_view_list' => [
                "type" => "theme_engine",
                "theme path" => "themes/suffix_zx",
                "includes" => array('core/modules/views/views.theme.inc'),
                "variables" => array(
                    "view" => null,
                    "options" => null,
                    "rows" => null,
                    "title" => null,
                ),
                "render element" => "element",
                'base hook' => 'cart_views_view_list',
                "path" => "themes/suffix_zx/templates/views",
                "preprocess functions" => ["suffix_zx_preprocess_cart_views_view_list"],
                //'override preprocess functions' => true,
                //"incomplete preprocess functions" => true,
            ],
        "cart_views_view_table" => [
            "template" => "cart-views-view-table",
            "path" => "themes/suffix_zx/templates/views",
            "type" => "theme_engine",
            "theme path" => "themes/suffix_zx",
            "includes" => [
              0 => "core/modules/views/views.theme.inc",
            ],
            "variables" => [
              "view" => null,
              "options" => null,
              "rows" => null,
              "title" => null,
            ],
            "preprocess functions" => [

            ],
          ],

    ];
}

function suffix_zx_theme_registry_alter(&$theme_registry) {
    $theme_registry['page__user__orders']['preprocess functions'][] = 'suffix_zx_preprocess_page_user_orders';
    $theme_registry['page__user__customer']['preprocess functions'][] = 'suffix_zx_preprocess_page_user_customer';
    $theme_registry['page__user__customer__add']['preprocess functions'][] = 'suffix_zx_preprocess_page_user_customer_add';
    $theme_registry['page__profile__edit']['preprocess functions'][] = 'suffix_zx_preprocess_page_user_profile_edit';
    //$theme_registry['page__cart__confirm']['preprocess functions'][] = 'suffix_zx_preprocess_page_cart_confirm';

    //$theme_registry['page__cart__confirm']['variables'] = null;
//    dump($theme_registry);exit;
//    $theme_registry["page__cart"] = [
//            "template" => "page--cart",
//            "path" => "themes/suffix_zx/templates/cart",
//            "render element" => "page",
//            //"base hook" => "commerce_cart_page",
//            "type" => "theme_engine",
//            "theme path" => "themes/suffix_zx",
//            //"incomplete preprocess functions" => true,
//            //"preprocess functions" => ["suffix_zx_preprocess_page_cart"],
//            'variables' => [
//                'title' => "sadssfd",
//                'description' => NULL,
//                'links' => NULL,
//                'empty' => NULL,
//            ],
//            'override preprocess functions' => true,
//        ];
//    $theme_registry['views_view']['override preprocess functions'] = true;
//    $theme_registry['views_view']['preprocess functions'][] = 'suffix_zx_preprocess_views_view';
//    dump($theme_registry);
}



//function suffix_zx_theme_suggestions_views_view_table_alter(array &$suggestions, array $variables) {
//    $view = $variables['view'];
//    if (strpos($view->storage->get('tag'), 'commerce_cart_form') === FALSE) {
//        return ;
//    }
//    $suggestions[] = 'cart_views_view_table';
//    //dump($variables);
//}
//
//function suffix_zx_theme_suggestions_views_view_list_alter(array &$suggestions, array $variables) {
//    $view = $variables['view'];
//    if (strpos($view->storage->get('tag'), 'commerce_cart_form') === FALSE) {
//        return ;
//    }
//    //$suggestions[] = 'cart_views_view_list';
//    //dump($variables);
//}



//function suffix_zx_preprocess_page_cart(&$variables) {
//    $container = \Drupal::service("service_container");
//    $cartProvider = $container->get('commerce_cart.cart_provider');
//    $carts = $cartProvider->getCarts();
//    //dump($carts);
//
//    $carSession = \Drupal::service('commerce_cart.cart_session');
//    $variables['ddd'] ="saf";
//    //dump($variables);
//}

//function _getCartViews(array $carts) {
//    $order_type_ids = array_map(function ($cart) {
//        /** @var \Drupal\commerce_order\Entity\OrderInterface $cart */
//        return $cart->bundle();
//    }, $carts);
//    $order_type_storage = $this->entityTypeManager()->getStorage('commerce_order_type');
//    $order_types = $order_type_storage->loadMultiple(array_unique($order_type_ids));
//    $cart_views = [];
//    foreach ($order_type_ids as $cart_id => $order_type_id) {
//        /** @var \Drupal\commerce_order\Entity\OrderTypeInterface $order_type */
//        $order_type = $order_types[$order_type_id];
//        $cart_views[$cart_id] = $order_type->getThirdPartySetting('commerce_cart', 'cart_form_view', 'commerce_cart_form');
//    }
//
//    return $cart_views;
//}

//function suffix_zx_preprocess_views_view($variables) {
//    $view = $variables['view'];
//    if (strpos($view->storage->get('tag'), 'commerce_cart_form') === FALSE) {
//        return ;
//    }
//    //dump($variables);
//}

//function suffix_zx_preprocess_cart_views_view_list(&$variables) {
//    //dump($variables);
//}

function _getOrderItem($orderCartList) {
    $retMap = array(
        'count' => count($orderCartList),
        'orderItemsShow' => array(),
        'itemTotal' =>0,
        'orderTotalPrice' => 0,
    );
    //dump($orderCartList);exit;
    $orderItemsShow = array();
    $itemTotal = 0;
    foreach ($orderCartList as $key => $resultRow) {
        //echo $key;
        //dump($resultRow);exit;
        $tmp = array(
            'title' =>'',
            'unitPrice' => 0,
            'quantity' => 0,
            'totalPrice' => 0,
            'smallimg' => '',
            'productUrl' => '',
            'productKey' =>$key,
        );
        $orderEntity = $resultRow->_entity;
        $orderRetationshipEntity = $resultRow->_relationship_entities;
        //dump($orderRetationshipEntity['order_items']);exit;
        //$purchsed = $orderEntity->getOrdergetPurchasedEntity();
        $orderItems = $orderRetationshipEntity['order_items'];
        $productVariation = $orderRetationshipEntity['order_items']->getPurchasedEntity();
        $product = $productVariation->getProduct();
        $tmp['title'] = $product->getTitle();

        $tmp['unitPrice'] = explode(" ",$orderItems->getUnitPrice())[0];
        $tmp['quantity'] = intval($orderItems->getQuantity());
        //dump($product->get('field_fengmiantu'));exit;
        $imgStr = $product->get('field_fengmiantu')->view();
        //dump($product->get('field_fengmiantu'));exit;
        //unset($imgStr['#label_display']);
        //unset($imgStr['#title']);
        $tmp['smallimg'] = render($imgStr);
        $tmp['totalPrice'] = intval($orderItems->getTotalPrice()->getNumber());
        $tmp['productUrl'] = '/product/'.$product->toArray()['product_id'][0]['value'];
        //$tmp['removeBtn'] = render($variables['rows']['remove_button'][$key]);

        $itemTotal += $tmp['quantity'];
        $retMap['orderTotalPrice'] += $tmp['totalPrice'];
//        dump($tmp);exit;
        array_push($orderItemsShow, $tmp);
    }
    $retMap['orderItemsShow'] = $orderItemsShow;
    $retMap['itemTotal'] = $itemTotal;
    return $retMap;
}

function suffix_zx_preprocess_cart_views_view(&$variables) {
    $variables['price_total'] = intval($variables['footer']['commerce_order_total']['#totals']['total']->getNumber());
    //dump($variables);
//    $checkout = $variables['rows']['actions']['checkout'];
//    $checkout['#value'] ="结算";
//    dump($checkout);
//    echo render($checkout);

    //dump($variables);exit;
    $orderCartList = $variables['rows']['output'][0]['#rows'];
    $dataRet = _getOrderItem($orderCartList);
    $variables['product_total'] = $dataRet['count'];

    $variables['orderItems'] = $dataRet['orderItemsShow'];
    $variables['itemTotal'] = $dataRet['itemTotal'];
    $variables['form_build_id'] = render($variables['rows']['form_build_id']);
    $variables['form_token'] = render($variables['rows']['form_token']);
    $variables['form_id'] = render($variables['rows']['form_id']);
    //$view = views_embed_view('chanpinliebiao','default');
    //echo render($view);
    //dump($view);
    //dump($view = Views::getView('chanpinliebiao'));exit;

    //$viewManager = \Drupal::service('plugin.manager.views.access');
    //dump($viewManager->getDefinition('chanpinliebiao'));exit;

//    $view = array(
//        'product_list' => array(
//            "#type" => "view",
//            "#name" => "chanpinliebiao",
//            "#arguments" => array(),
//        ),
//    );
//    echo render($view);exit;
    //dump($variables);
    //$order = $orderCartList[0]->_entity;
    //dump($orderCartList);
    //echo $r = render($variables['rows']['output'][0]);exit;
    //$variables['price_total'] = $order->getSubtotalPrice()->getNumber() ? intval($order->getSubtotalPrice()->getNumber()) : 0;
}

//订单确认页面
//function suffix_zx_preprocess_page_cart_confirm(&$variables) {
//    $variables['page'][4]['#theme'] = 'cart-confirm-views-view';
//    //dump($variables);
//}
//
//function suffix_zx_preprocess_cart_confirm_views_view(&$variables) {
//    dump($variables);
//}

function suffix_zx_preprocess_commerce_checkout_form(&$variables) {
    //dump($variables);exit;
    //$variables['form']['sidebar']['#theme'] = 'commerce_checkout_form__sidebar';
    $summary = $variables['form']['sidebar']['order_summary']['summary'];
    //dump($summary);exit;
    $orderCartList = views_get_view_result($summary['#name'],$summary['#display_id'], $summary['#arguments'][0]);
    $dataRet = _getOrderItem($orderCartList);
    $variables['product_total'] = $dataRet['count'];
    $variables['orderItems'] = $dataRet['orderItemsShow'];
    $variables['itemTotal'] = $dataRet['itemTotal'];
    $variables['orderTotalPrice'] = $dataRet['orderTotalPrice'];
    $order = \Drupal::entityTypeManager()->getStorage("commerce_order")->load($summary['#arguments'][0]);
    //dump($order);
    $currentUser = \Drupal::currentUser();
    $userEntity = \Drupal::entityTypeManager()->getStorage('user')->load($currentUser->id());
    //kint($userEntity);

    $profileQuery = \Drupal::entityQuery("profile");
    $profileQuery->condition('uid',$currentUser->id(),'=');
    $profileQuery->condition('is_default',true,'=');
    $currentUserProfileIds = $profileQuery->execute();
    //dump($profileQuery);exit;
    $profile = \Drupal::entityTypeManager()->getStorage('profile')->loadMultiple($currentUserProfileIds);
    $currentProfile = current($profile);
    $variables['address'] = $currentProfile->address[0]->toArray();
    //dump($variables['address']);

    //获取字段定义
//    $storageDef = $currentProfile->address->getFieldDefinition()
//        ->getFieldStorageDefinition()
//        ->getPropertyDefinition('family_name');
//    dump($storageDef);


//    $address["billing_information"] = array(
//      "#type" => "commerce_profile_select",
//      "#default_value" => $currentProfile,
//        "#default_country" => "CN",
//      "#available_countries" =>array('CN'),
//    );
//    dump($address);
//    $currentAddress = $currentProfile->get('address')->get(0);
//    //dump($currentAddress);
//    $address = \Drupal::getContainer()->get('address.address_format_repository')->get('CN');
//
//    $form['address'] = [
//    '#type' => 'address',
//    '#default_value' => [
//      'given_name' => $currentAddress->get('given_name')->getValue(),
//      'family_name' => $currentAddress->get('family_name')->getValue(),
//      'organization' => $currentAddress->get('organization')->getValue(),
//      'address_line1' => $currentAddress->get('address_line1')->getValue(),
//      'postal_code' => $currentAddress->get('postal_code')->getValue(),
//      'locality' => $currentAddress->get('locality'),
//      'administrative_area' => $currentAddress->get('administrative_area')->getValue(),
//      'country_code' => $currentAddress->get('country_code')->getValue(),
//      'langcode' => $currentAddress->get('langcode')->getValue(),
//    ],
//    '#available_countries' => ['CN'],
//  ];
    //dump($form);

    //dump($address->getUsedFields());
//    dump($variables);
//    $view = Views::getView($summary['#name']);
//    dump($view);
//    $view = views_get_current_view();
//    dump($view);
    //dump($variables);
    //$order = \Drupal::entityTypeManager()->getStorage("commerce_order")->getEntityType();
    //$fieldInfo = field_entity_field_storage_info($order);
    //dump($fieldInfo);
    //$fieldFormatter = \Drupal::getContainer()->get('plugin.manager.field.formatter');
    //dump($fieldFormatter->getDefinition('address_plain'));
    //$bundlesLabe = entity_get_bundles("commerce_order");
    //$form = entity_get_form_display('commerce_order', $bundlesLabe['default']['label'], 'default');
    //$order = \Drupal::entityTypeManager()->getStorage("commerce_order")->load($summary['#arguments'][0]);
    //kint($order->get('field_shangmenshijian'));
}

function suffix_zx_form_commerce_checkout_flow_multistep_default_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    $currentUser = \Drupal::currentUser();
    $profileQuery = \Drupal::entityQuery("profile");
    $profileQuery->condition('uid',$currentUser->id(),'=');
    $profileQuery->condition('is_default',true,'=');
    $currentUserProfileIds = $profileQuery->execute();
    $profile = \Drupal::entityTypeManager()->getStorage('profile')->loadMultiple($currentUserProfileIds);
    $currentProfile = current($profile);
    $form['payment_information']['billing_information']['#default_value'] = $currentProfile;
//    //dump($form);exit;
//    //dump($form_state);exit;
//    //$submit_handlers = $form_state->getSubmitHandlers();
    $form['#submit'][] = 'suffix_zx_form_commerce_checkout_flow_multistep_default_submit';
//    $submit_handlers [] = 'suffix_zx_form_commerce_checkout_flow_multistep_default_submit';
//    $form_state->setSubmitHandlers($submit_handlers );
//    //$validateHandlers = $form_state->getValidateHandlers();
//    $validateHandlers[] = 'suffix_zx_form_commerce_checkout_flow_multistep_default_validate';
//    $form_state->setValidateHandlers($validateHandlers);
    //dump($form_state->getBuildInfo());exit;
}

function suffix_zx_form_commerce_checkout_flow_multistep_default_submit(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
    $tupian = $form_state->getValue('field_beizhutupian');
    $beizhu = $form_state->getValue('field_liuyanbeizhu');
    $shijian = $form_state->getValue('field_shangmenshijian');
}

function suffix_zx_form_commerce_checkout_flow_multistep_default_validate(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
    //dump($form);exit;
}


//用户订单
function suffix_zx_preprocess_page_user_orders(&$variables) {
    $currentUser = \Drupal::currentUser();
    $userId = $currentUser->id();
    $orderCartList = views_get_view_result('commerce_user_orders','default', $userId);
    //dump($orderCartList);
    $orderList = array();
    foreach($orderCartList as $key => $order) {
        $tmp = array();

        $orderEntity = $order->_entity;
        $tmp['order_id'] = $orderEntity->order_id[0]->value;
        $tmp['order_number'] = $orderEntity->order_number[0]->value;
        $tmp['order_time'] = date('Y-m-d G:i',$orderEntity->created[0]->value);
        $tmp['order_total'] = intval($orderEntity->total_price[0]->number);
        $tmp['order_status'] = '待接单';
        $tmp['item_count'] = $orderEntity->order_items->count();
        $tmp['order_items'] = _getProductItem($orderEntity->order_items);

        //dump($tmp);
        //dump($orderEntity);
        array_push($orderList, $tmp);
    }
    $variables['orderList'] = $orderList;

}

//获取订单条目中产品信息
function _getProductItem($orderItemList) {
    $productList = array();
    foreach($orderItemList as $item) {
        $tmp = array();
        $orderItem = \Drupal::entityTypeManager()->getStorage("commerce_order_item")->load($item->target_id);
        $productVariation = $orderItem->getPurchasedEntity();
        $product = $productVariation->getProduct();
        $tmp['title'] = $product->getTitle();

        $imgStr = $product->get('field_fengmiantu')->view();
        $tmp['smallimg'] = render($imgStr);
        $tmp['quantity'] = intval($orderItem->getQuantity());
        $tmp['unitPrice'] = explode(" ",$orderItem->getUnitPrice())[0];;
        array_push($productList, $tmp);
    }
    return $productList;
}

//用户地址列表
function suffix_zx_preprocess_page_user_customer(&$variables) {
    $currentUser = \Drupal::currentUser();
    $profileList = views_get_view_result('profiles','profile_type_listing', $currentUser->id(), 'customer', 1);
    //dump($profileList);
    foreach ($profileList as $profile) {
        $addressEntity = $profile->_entity;
        $tmp = $addressEntity->address[0]->toArray();
        $tmp['field_phonenumber'] = $addressEntity->field_phonenumber->value;
        $tmp['profile_id'] = $profile->profile_id;
        $tmp['is_default'] = isset($addressEntity->is_default[0]) ? $addressEntity->is_default[0]->value : 0;
        $addressList[] = $tmp;
    }
    $variables['addressList'] = $addressList;
    //dump($variables);
}

function suffix_zx_form_profile_customer_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    //$args = func_get_args();
//    $form['address']['widget']['#theme'] = 'field_multiple_value_form_customer';
//    $form['field_phonenumber']['widget']['#theme'] = 'field_multiple_value_form_customer';
    $form['#theme'] ='profile_customer_edit_form';
    //dump($form);
}

//用户地址列表-编辑
//function suffix_zx_preprocess_page_user_profile_edit(&$variables) {
//    $routeMatch = \Drupal::routeMatch();
//    $profileEntity = $routeMatch->getParameters()->get('profile');
//    if(!$profileEntity) {
//        return false;
//    }
//    $tmp = $profileEntity->address[0]->toArray();
//    $tmp['profile_id'] = $profileEntity->profile_id[0]->value;
//    $tmp['is_default'] = isset($profileEntity->is_default[0]) ? $profileEntity->is_default[0]->value : 0;
//    $variables['addr'] = $tmp;
//    //dump($variables);
//}

function suffix_zx_preprocess_profile_customer_edit_form(&$variables) {
    $routeMatch = \Drupal::routeMatch();
    $profileEntity = $routeMatch->getParameters()->get('profile');
    if(!$profileEntity) {
        return false;
    }
    $tmp = $profileEntity->address[0]->toArray();
    $tmp['field_phonenumber'] = $profileEntity->field_phonenumber->value;
    $tmp['profile_id'] = $profileEntity->profile_id[0]->value;
    $tmp['is_default'] = isset($profileEntity->is_default[0]) ? $profileEntity->is_default[0]->value : 0;
    $variables['addr'] = $tmp;
    $variables['form_build_id'] = render($variables['elements']['form_build_id']);
    $variables['form_token'] = render($variables['elements']['form_token']);
    $variables['form_id'] = render($variables['elements']['form_id']);
    //dump($profileEntity);
}


//用户地址列表-新增-page-修改
//function suffix_zx_preprocess_page_user_customer_add(&$variables) {
////    $args = func_get_args();
////    dump($args);
//}

//用户地址列表-新增-FORM ALERT
function suffix_zx_form_profile_customer_add_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    //dump($form_state);
}

//用户地址列表-新增-form-page
function suffix_zx_preprocess_profile_customer_add_form(&$variables) {
    $variables['form_build_id'] = render($variables['elements']['form_build_id']);
    $variables['form_token'] = render($variables['elements']['form_token']);
    $variables['form_id'] = render($variables['elements']['form_id']);
    //dump($variables);
}

function suffix_zx_profile_presave(Drupal\Core\Entity\EntityInterface $entity) {
    dump($entity);exit;
}

function suffix_zx_profile_customer_add_form_validate() {
    $args = func_get_args();
    dump($args);
}